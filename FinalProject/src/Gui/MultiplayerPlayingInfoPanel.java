/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Gui;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JTextField;
import javax.swing.Timer;

/**
 *
 * @author txola
 */
public class MultiplayerPlayingInfoPanel extends javax.swing.JPanel {

    MultiplayerInfoPanel mainPanel;
    public MultiplayerPlayingInfoPanel(MultiplayerInfoPanel mainPanel) {
        initComponents();
        this.mainPanel = mainPanel;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        velocimeter = new javax.swing.JTextField();
        fastLapTime = new javax.swing.JTextField();
        lapTimer = new javax.swing.JTextField();
        leaveGameButton = new javax.swing.JButton();

        setOpaque(false);

        velocimeter.setEditable(false);
        velocimeter.setBackground(new java.awt.Color(141, 141, 141));
        velocimeter.setFont(new java.awt.Font("URW Gothic L", 1, 18)); // NOI18N
        velocimeter.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        velocimeter.setText("15  km/h");
        velocimeter.setToolTipText("");
        velocimeter.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        velocimeter.setFocusable(false);
        velocimeter.setRequestFocusEnabled(false);
        velocimeter.setSelectionColor(new Color(0,0, 0, 0));
        velocimeter.setVerifyInputWhenFocusTarget(false);

        fastLapTime.setEditable(false);
        fastLapTime.setBackground(new java.awt.Color(141, 141, 141));
        fastLapTime.setFont(new java.awt.Font("URW Gothic L", 1, 18)); // NOI18N
        fastLapTime.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fastLapTime.setText("--:--:--");
        fastLapTime.setToolTipText("");
        fastLapTime.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        fastLapTime.setFocusable(false);
        fastLapTime.setRequestFocusEnabled(false);
        fastLapTime.setSelectionColor(new Color(0,0, 0, 0));
        fastLapTime.setVerifyInputWhenFocusTarget(false);

        lapTimer.setEditable(false);
        lapTimer.setBackground(new java.awt.Color(141, 141, 141));
        lapTimer.setFont(new java.awt.Font("URW Gothic L", 1, 18)); // NOI18N
        lapTimer.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lapTimer.setToolTipText("");
        lapTimer.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        lapTimer.setFocusable(false);
        lapTimer.setRequestFocusEnabled(false);
        lapTimer.setSelectionColor(new Color(0,0, 0, 0));
        lapTimer.setVerifyInputWhenFocusTarget(false);

        leaveGameButton.setBackground(new java.awt.Color(141, 141, 141));
        leaveGameButton.setFont(new java.awt.Font("URW Gothic L", 1, 18)); // NOI18N
        leaveGameButton.setText("Leave Game");
        leaveGameButton.setFocusPainted(false);
        leaveGameButton.setFocusable(false);
        leaveGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leaveGameButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(velocimeter, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(fastLapTime, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(194, 194, 194)
                .addComponent(lapTimer, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 274, Short.MAX_VALUE)
                .addComponent(leaveGameButton, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(lapTimer, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(leaveGameButton))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(velocimeter, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                            .addComponent(fastLapTime))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void leaveGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leaveGameButtonActionPerformed
        // TODO add your handling code here:
        mainPanel.getGameFrame().goToMenu(mainPanel.getGamePanel());
        mainPanel.getGamePanel().finish();
    }//GEN-LAST:event_leaveGameButtonActionPerformed

    public void update() {
        updateCounter(lapTimer, mainPanel.getGamePanel().getLapSeconds());
        updateVelocimeter();
    }
    
    private void updateVelocimeter() {
        velocimeter.setText(String.format("%.2f",
                mainPanel.getGamePanel().getPlayer().getSpeed() /
                        mainPanel.getGamePanel().getPlayer().getMaxSpeed() * 160) + " km/h");
    }
    private void updateCounter(JTextField counter, float seconds) {
        int minutes = (int) (seconds / 60);
        int secs = (int) (seconds % 60);
        int rest = (int) ((seconds - secs) * 100);
        counter.setText(String.format("%02d:%02d:%02d", minutes,secs, rest));
    }
    public void updateFastestLapCounter() {
        Timer timer = new Timer(4000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Reset the color to the default
                fastLapTime.setForeground(new Color(51, 51, 51));
            }
        });
        timer.setRepeats(false); 
        timer.start();
        fastLapTime.setForeground(new Color(215, 6, 149));
        updateCounter(fastLapTime, mainPanel.getGamePanel().getFastestLap());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField fastLapTime;
    private javax.swing.JTextField lapTimer;
    private javax.swing.JButton leaveGameButton;
    private javax.swing.JTextField velocimeter;
    // End of variables declaration//GEN-END:variables
}
